{
    "sourceFile": "src/core/components/AutocompleteInput/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1643610332916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643610366226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \r\n   const renderList = () => {\r\n       return (\r\n         <>\r\n-        {items.map((item:any,index:any) => (<div key={String(index)}>\r\n+        {items.map((item:any,index:any) => (<div key={index}>\r\n           <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n"
                },
                {
                    "date": 1643610393459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n   const renderList = () => {\r\n       return (\r\n         <>\r\n         {items.map((item:any,index:any) => (<div key={index}>\r\n-          <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n+          <div className={\"autocomplete__item\"} key={index} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n"
                },
                {
                    "date": 1643610420934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,11 +63,11 @@\n       return (\r\n         <>\r\n         {items.map((item:any,index:any) => (<div key={index}>\r\n           <div className={\"autocomplete__item\"} key={index} onClick={(e) => onClick(e,index)}>\r\n-              <div className=\"label\" >{item.label.label}</div>\r\n+              <div className=\"label\" key={index}>{item.label.label}</div>\r\n \r\n-              <span >({item.label.type})</span>\r\n+              <span key={index}>({item.label.type})</span>\r\n           </div>\r\n \r\n     </div>))\r\n \r\n"
                },
                {
                    "date": 1643610453608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n         {items.map((item:any,index:any) => (<div key={index}>\r\n           <div className={\"autocomplete__item\"} key={index} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" key={index}>{item.label.label}</div>\r\n \r\n-              <span key={index}>({item.label.type})</span>\r\n+              <span >({item.label.type})</span>\r\n           </div>\r\n \r\n     </div>))\r\n \r\n"
                },
                {
                    "date": 1643610462607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,10 @@\n   const renderList = () => {\r\n       return (\r\n         <>\r\n         {items.map((item:any,index:any) => (<div key={index}>\r\n-          <div className={\"autocomplete__item\"} key={index} onClick={(e) => onClick(e,index)}>\r\n-              <div className=\"label\" key={index}>{item.label.label}</div>\r\n+          <div className={\"autocomplete__item\"}  onClick={(e) => onClick(e,index)}>\r\n+              <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1643610474255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n \r\n   const renderList = () => {\r\n       return (\r\n         <>\r\n-        {items.map((item:any,index:any) => (<div key={index}>\r\n-          <div className={\"autocomplete__item\"}  onClick={(e) => onClick(e,index)}>\r\n+        {items.map((item:any,index:any) => (<div key={item.label.label}>\r\n+          <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n"
                },
                {
                    "date": 1643610522079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       shouldItemRender={(item: any, value) => {\r\n         return grouping === true ? item.label.label.toLowerCase().includes(value) : item.label.toLowerCase().includes(value);\r\n \r\n       }}\r\n-      renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" ><div className=\"autocomplete__item\">{item.label}</div></div>}\r\n+      renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" ><div className=\"autocomplete__item\" key={item.label}>{item.label}</div></div>}\r\n       value={value}\r\n       menuStyle={grouping === true ? {display:\"none\"} : {borderRadius:\"3px\",boxShadow:\"0 2px 12px rgba(0, 0, 0, 0.1)\",marginTop:\"2px\",zIndex:\"2\",overflow:\"auto\",position:'absolute',background:'rgba(255, 255, 255, 0.9)',maxHeight:\"300px\",left:\"5px\",top:\"50px\",width:\"661px\"}}\r\n       onChange={(e: any) => {\r\n         setShow(true)\r\n"
                },
                {
                    "date": 1643610645148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n   },[autocomplete,value]);\r\n \r\n   const renderList = () => {\r\n       return (\r\n-        <>\r\n+        \r\n         {items.map((item:any,index:any) => (<div key={item.label.label}>\r\n           <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n@@ -71,9 +71,9 @@\n \r\n     </div>))\r\n \r\n         }\r\n-        </>\r\n+        \r\n       )\r\n       \r\n   };\r\n   return (\r\n"
                },
                {
                    "date": 1643610707196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,23 +59,21 @@\n   }\r\n   },[autocomplete,value]);\r\n \r\n   const renderList = () => {\r\n-      return (\r\n-        \r\n-        {items.map((item:any,index:any) => (<div key={item.label.label}>\r\n+      return  ( items.map((item:any,index:any) => (<div key={item.label.label}>\r\n           <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n \r\n     </div>))\r\n \r\n-        }\r\n+      )\r\n         \r\n-      )\r\n       \r\n+      \r\n   };\r\n   return (\r\n     <>\r\n     <Autocomplete\r\n"
                },
                {
                    "date": 1643610751504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,21 +59,23 @@\n   }\r\n   },[autocomplete,value]);\r\n \r\n   const renderList = () => {\r\n-      return  ( items.map((item:any,index:any) => (<div key={item.label.label}>\r\n+      return (\r\n+        <>\r\n+        {items.map((item:any,index:any) => (<div key={item.label.label}>\r\n           <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n \r\n     </div>))\r\n \r\n+        }\r\n+        </>\r\n       )\r\n-        \r\n       \r\n-      \r\n   };\r\n   return (\r\n     <>\r\n     <Autocomplete\r\n"
                },
                {
                    "date": 1643610789567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,21 +59,18 @@\n   }\r\n   },[autocomplete,value]);\r\n \r\n   const renderList = () => {\r\n-      return (\r\n-        <>\r\n-        {items.map((item:any,index:any) => (<div key={item.label.label}>\r\n+      return (items.map((item:any,index:any) => (<div key={item.label.label}>\r\n           <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n \r\n     </div>))\r\n \r\n-        }\r\n-        </>\r\n+        \r\n       )\r\n       \r\n   };\r\n   return (\r\n"
                },
                {
                    "date": 1643610884267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n       shouldItemRender={(item: any, value) => {\r\n         return grouping === true ? item.label.label.toLowerCase().includes(value) : item.label.toLowerCase().includes(value);\r\n \r\n       }}\r\n-      renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" ><div className=\"autocomplete__item\" key={item.label}>{item.label}</div></div>}\r\n+      renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" key={item.label} ><div className=\"autocomplete__item\">{item.label}</div></div>}\r\n       value={value}\r\n       menuStyle={grouping === true ? {display:\"none\"} : {borderRadius:\"3px\",boxShadow:\"0 2px 12px rgba(0, 0, 0, 0.1)\",marginTop:\"2px\",zIndex:\"2\",overflow:\"auto\",position:'absolute',background:'rgba(255, 255, 255, 0.9)',maxHeight:\"300px\",left:\"5px\",top:\"50px\",width:\"661px\"}}\r\n       onChange={(e: any) => {\r\n         setShow(true)\r\n"
                },
                {
                    "date": 1643611881805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n     if (onSubmit) {\r\n       if (e.key === \"Enter\") onSubmit(value);\r\n     }\r\n   };\r\n+\r\n   const [show,setShow] = useState(true)\r\n   const onClick = useCallback((e:any,index:any) => {\r\n     const labels:any = Array.from(document.getElementsByClassName('label'))[index];\r\n     setValue(labels.innerText);\r\n@@ -73,9 +74,9 @@\n       )\r\n       \r\n   };\r\n   return (\r\n-    <>\r\n+    <div>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n@@ -111,9 +112,9 @@\n         );\r\n       }}\r\n     />\r\n     {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n-  </>\r\n+  </div>\r\n   );\r\n };\r\n \r\n export default AutocompleteInput;\r\n"
                },
                {
                    "date": 1643611905974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n       )\r\n       \r\n   };\r\n   return (\r\n-    <div>\r\n+    <>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n@@ -112,9 +112,9 @@\n         );\r\n       }}\r\n     />\r\n     {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n-  </div>\r\n+  </>\r\n   );\r\n };\r\n \r\n export default AutocompleteInput;\r\n"
                },
                {
                    "date": 1643612294907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n       )\r\n       \r\n   };\r\n   return (\r\n-    <>\r\n+    <div>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n@@ -112,9 +112,9 @@\n         );\r\n       }}\r\n     />\r\n     {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n-  </>\r\n+  </div>\r\n   );\r\n };\r\n \r\n export default AutocompleteInput;\r\n"
                },
                {
                    "date": 1643612478448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     if (onSubmit) {\r\n       if (e.key === \"Enter\") onSubmit(value);\r\n     }\r\n   };\r\n-\r\n+  const node:any = useRef();\r\n   const [show,setShow] = useState(true)\r\n   const onClick = useCallback((e:any,index:any) => {\r\n     const labels:any = Array.from(document.getElementsByClassName('label'))[index];\r\n     setValue(labels.innerText);\r\n@@ -73,8 +73,20 @@\n         \r\n       )\r\n       \r\n   };\r\n+  useEffect(() => {\r\n+    const handleClick = (event:any) => {\r\n+      if(node.current && show && !node.current.contains(event.target)){\r\n+        setShow(false);\r\n+      }\r\n+    };\r\n+    document.addEventListener('mousedown', handleClick);\r\n+\r\n+    return () => {\r\n+      document.removeEventListener('mousedown', handleClick);\r\n+    }\r\n+  },[show])\r\n   return (\r\n     <div>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n"
                },
                {
                    "date": 1643612523453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       document.removeEventListener('mousedown', handleClick);\r\n     }\r\n   },[show])\r\n   return (\r\n-    <div>\r\n+    <div ref={node}>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n"
                },
                {
                    "date": 1643614118460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   useState,\r\n   useMemo,\r\n } from \"react\";\r\n import Autocomplete from \"react-autocomplete\";\r\n-\r\n+import Autosuggest from \"react-autosuggest\";\r\n import \"../../assets/components/autocomplete.scss\";\r\n \r\n type Props = {\r\n   placeholder?: string;\r\n"
                },
                {
                    "date": 1643614172974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n \r\n       }}\r\n       renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" key={item.label} ><div className=\"autocomplete__item\">{item.label}</div></div>}\r\n       value={value}\r\n-      menuStyle={grouping === true ? {display:\"none\"} : {borderRadius:\"3px\",boxShadow:\"0 2px 12px rgba(0, 0, 0, 0.1)\",marginTop:\"2px\",zIndex:\"2\",overflow:\"auto\",position:'absolute',background:'rgba(255, 255, 255, 0.9)',maxHeight:\"300px\",left:\"5px\",top:\"50px\",width:\"661px\"}}\r\n+      menuStyle={grouping === true ? {display:\"none\"} : {borderRadius:\"3px\",boxShadow:\"0 2px 12px rgba(0, 0, 0, 0.1)\",marginTop:\"2px\",zIndex:2,overflow:\"auto\",position:'absolute',background:'rgba(255, 255, 255, 0.9)',maxHeight:\"300px\",left:\"5px\",top:\"50px\",width:\"661px\"}}\r\n       onChange={(e: any) => {\r\n         setShow(true)\r\n         setValue(e.target.value)}}\r\n         onSelect={(value) => {\r\n"
                },
                {
                    "date": 1643614277812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n   },[autocomplete,value]);\r\n \r\n   const renderList = () => {\r\n       return (items.map((item:any,index:any) => (<div key={item.label.label}>\r\n-          <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n+          <div className={\"autocomplete__item\"} key={item.label.label} onClick={(e) => onClick(e,index)}>\r\n               <div className=\"label\" >{item.label.label}</div>\r\n \r\n               <span >({item.label.type})</span>\r\n           </div>\r\n"
                },
                {
                    "date": 1643617483723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,12 +84,23 @@\n \r\n     return () => {\r\n       document.removeEventListener('mousedown', handleClick);\r\n     }\r\n-  },[show])\r\n+  },[show]);\r\n+  const getSuggestionsValue = (suggestion:any) =>{\r\n+    return suggestion.label.label\r\n+  }\r\n+  const getSectionSuggestions = (suggestion:any) => {\r\n+    return suggestion.group\r\n+  }\r\n+  const renderSuggestions = (suggestion) => {\r\n+    return (\r\n+      <span>{suggestion.label.label}</span>\r\n+    )\r\n+  }\r\n   return (\r\n     <div ref={node}>\r\n-    <Autocomplete\r\n+    {/* <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n       items={autocomplete}\r\n@@ -123,9 +134,16 @@\n           />\r\n         );\r\n       }}\r\n     />\r\n-    {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n+    {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null} */}\r\n+    <Autosuggest\r\n+      suggestions={autocomplete}\r\n+      multiSection={true}\r\n+      getSuggestionValue={getSuggestionsValue}\r\n+      getSectionSuggestions={getSectionSuggestions}\r\n+      renderSuggestion={}\r\n+    />\r\n   </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1643617818510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,13 +91,16 @@\n   }\r\n   const getSectionSuggestions = (suggestion:any) => {\r\n     return suggestion.group\r\n   }\r\n-  const renderSuggestions = (suggestion) => {\r\n+  const renderSuggestions = (suggestion:any) => {\r\n     return (\r\n       <span>{suggestion.label.label}</span>\r\n     )\r\n   }\r\n+  const renderSectionTitle = (suggestion:any) => {\r\n+    return (<span>{suggestion.group}</span>)\r\n+  }\r\n   return (\r\n     <div ref={node}>\r\n     {/* <Autocomplete\r\n       getItemValue={(item) => {\r\n@@ -140,9 +143,15 @@\n       suggestions={autocomplete}\r\n       multiSection={true}\r\n       getSuggestionValue={getSuggestionsValue}\r\n       getSectionSuggestions={getSectionSuggestions}\r\n-      renderSuggestion={}\r\n+      renderSuggestion={renderSuggestions}\r\n+      renderSectionTitle={renderSectionTitle}\r\n+      inputProps={{\r\n+        onChange:() => setValue,\r\n+        value:value,\r\n+        placeholder:\"Type medications\"\r\n+      }}\r\n     />\r\n   </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1643617961180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,8 +99,14 @@\n   }\r\n   const renderSectionTitle = (suggestion:any) => {\r\n     return (<span>{suggestion.group}</span>)\r\n   }\r\n+  const onSuggestionsFetchRequested = ({value}:any) => {\r\n+\r\n+  }\r\n+  const onSuggestionsClearRequested = () => {\r\n+    \r\n+  }\r\n   return (\r\n     <div ref={node}>\r\n     {/* <Autocomplete\r\n       getItemValue={(item) => {\r\n@@ -150,8 +156,10 @@\n         onChange:() => setValue,\r\n         value:value,\r\n         placeholder:\"Type medications\"\r\n       }}\r\n+      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n+      onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n     />\r\n   </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1643618008766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,13 +103,13 @@\n   const onSuggestionsFetchRequested = ({value}:any) => {\r\n \r\n   }\r\n   const onSuggestionsClearRequested = () => {\r\n-    \r\n+\r\n   }\r\n   return (\r\n     <div ref={node}>\r\n-    {/* <Autocomplete\r\n+    <Autocomplete\r\n       getItemValue={(item) => {\r\n         return grouping === true ? item.label.label : item.label\r\n       }}\r\n       items={autocomplete}\r\n@@ -143,24 +143,10 @@\n           />\r\n         );\r\n       }}\r\n     />\r\n-    {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null} */}\r\n-    <Autosuggest\r\n-      suggestions={autocomplete}\r\n-      multiSection={true}\r\n-      getSuggestionValue={getSuggestionsValue}\r\n-      getSectionSuggestions={getSectionSuggestions}\r\n-      renderSuggestion={renderSuggestions}\r\n-      renderSectionTitle={renderSectionTitle}\r\n-      inputProps={{\r\n-        onChange:() => setValue,\r\n-        value:value,\r\n-        placeholder:\"Type medications\"\r\n-      }}\r\n-      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n-      onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n-    />\r\n+    {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n+\r\n   </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1643618015619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,28 +85,8 @@\n     return () => {\r\n       document.removeEventListener('mousedown', handleClick);\r\n     }\r\n   },[show]);\r\n-  const getSuggestionsValue = (suggestion:any) =>{\r\n-    return suggestion.label.label\r\n-  }\r\n-  const getSectionSuggestions = (suggestion:any) => {\r\n-    return suggestion.group\r\n-  }\r\n-  const renderSuggestions = (suggestion:any) => {\r\n-    return (\r\n-      <span>{suggestion.label.label}</span>\r\n-    )\r\n-  }\r\n-  const renderSectionTitle = (suggestion:any) => {\r\n-    return (<span>{suggestion.group}</span>)\r\n-  }\r\n-  const onSuggestionsFetchRequested = ({value}:any) => {\r\n-\r\n-  }\r\n-  const onSuggestionsClearRequested = () => {\r\n-\r\n-  }\r\n   return (\r\n     <div ref={node}>\r\n     <Autocomplete\r\n       getItemValue={(item) => {\r\n"
                },
                {
                    "date": 1643618056242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n   useState,\r\n   useMemo,\r\n } from \"react\";\r\n import Autocomplete from \"react-autocomplete\";\r\n-import Autosuggest from \"react-autosuggest\";\r\n import \"../../assets/components/autocomplete.scss\";\r\n \r\n type Props = {\r\n   placeholder?: string;\r\n"
                }
            ],
            "date": 1643610332916,
            "name": "Commit-0",
            "content": "import React, {\r\n  FC,\r\n  KeyboardEvent,\r\n  useCallback,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n} from \"react\";\r\nimport Autocomplete from \"react-autocomplete\";\r\n\r\nimport \"../../assets/components/autocomplete.scss\";\r\n\r\ntype Props = {\r\n  placeholder?: string;\r\n  autocomplete: Array<{\r\n    label: string;\r\n  }>;\r\n  classes?: string;\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  onSubmit?: any;\r\n  selected?: boolean;\r\n  grouping?:boolean;\r\n  filtered?:any;\r\n  setFiltered?:any\r\n};\r\n\r\nconst AutocompleteInput: FC<Props> = ({\r\n  autocomplete = [],\r\n  classes,\r\n  value,\r\n  setValue,\r\n  placeholder = \"\",\r\n  onSubmit,\r\n  selected,\r\n  grouping,\r\n}) => {\r\n  const enterHandler = (e: KeyboardEvent) => {\r\n    if (onSubmit) {\r\n      if (e.key === \"Enter\") onSubmit(value);\r\n    }\r\n  };\r\n  const [show,setShow] = useState(true)\r\n  const onClick = useCallback((e:any,index:any) => {\r\n    const labels:any = Array.from(document.getElementsByClassName('label'))[index];\r\n    setValue(labels.innerText);\r\n    setShow(false);\r\n  },[setValue,show]);\r\n\r\n    const items = useMemo(() => {\r\n      if(grouping === true){\r\n    const filtering:any = autocomplete.filter((items:any) => items.label.label.toLowerCase().includes(value.toLowerCase()));\r\n    const arr = [...new Set(filtering.map((e:any) => ({_id:e._id})))]\r\n    const filteringGroup = autocomplete.filter((e:any) => arr.some((x:any) => e._id === x._id))\r\n    return filteringGroup;\r\n  }else{\r\n    return [];\r\n  }\r\n  },[autocomplete,value]);\r\n\r\n  const renderList = () => {\r\n      return (\r\n        <>\r\n        {items.map((item:any,index:any) => (<div key={String(index)}>\r\n          <div className={\"autocomplete__item\"} onClick={(e) => onClick(e,index)}>\r\n              <div className=\"label\" >{item.label.label}</div>\r\n\r\n              <span >({item.label.type})</span>\r\n          </div>\r\n\r\n    </div>))\r\n\r\n        }\r\n        </>\r\n      )\r\n      \r\n  };\r\n  return (\r\n    <>\r\n    <Autocomplete\r\n      getItemValue={(item) => {\r\n        return grouping === true ? item.label.label : item.label\r\n      }}\r\n      items={autocomplete}\r\n      shouldItemRender={(item: any, value) => {\r\n        return grouping === true ? item.label.label.toLowerCase().includes(value) : item.label.toLowerCase().includes(value);\r\n\r\n      }}\r\n      renderItem={(item,isHighlighted)=>grouping === true ? (<div className=\"none\"></div>) : <div className=\"autocomplete\" ><div className=\"autocomplete__item\">{item.label}</div></div>}\r\n      value={value}\r\n      menuStyle={grouping === true ? {display:\"none\"} : {borderRadius:\"3px\",boxShadow:\"0 2px 12px rgba(0, 0, 0, 0.1)\",marginTop:\"2px\",zIndex:\"2\",overflow:\"auto\",position:'absolute',background:'rgba(255, 255, 255, 0.9)',maxHeight:\"300px\",left:\"5px\",top:\"50px\",width:\"661px\"}}\r\n      onChange={(e: any) => {\r\n        setShow(true)\r\n        setValue(e.target.value)}}\r\n        onSelect={(value) => {\r\n          if(grouping === true){\r\n            return false;\r\n          }else{\r\n            setValue(value)\r\n          }\r\n        }}\r\n      renderInput={(props) => {\r\n        return (\r\n          <input\r\n            {...props}\r\n            aria-invalid=\"false\"\r\n            className={classes}\r\n            placeholder={placeholder}\r\n            onKeyDown={enterHandler}\r\n            maxLength={30}\r\n            value={value}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n    {grouping === true ? <div className=\"menu\">{ show === true ? renderList() : null}</div> : null}\r\n  </>\r\n  );\r\n};\r\n\r\nexport default AutocompleteInput;\r\n"
        }
    ]
}